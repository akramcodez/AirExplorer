app.js =====if (process.env.NODE_ENV != 'production') {
  require('dotenv').config();
}

const express = require('express');
const app = express();
const mongoose = require('mongoose');
const path = require('path');
const methodOverride = require('method-override');
const ejsMate = require('ejs-mate');
const expressError = require('./utils/expressError.js');
const session = require('express-session');
const flash = require('connect-flash');
const passport = require('passport');
const LocalStrategy = require('passport-local');
const User = require('./models/user.js');

const listingsRouter = require('./routes/listing.js');
const reviewsRouter = require('./routes/review.js');
const userRouter = require('./routes/user.js');

const mongoUrl = 'mongodb://127.0.0.1:27017/airbnb';

main()
  .then((res) => {
    console.log('Connected to DB');
  })
  .catch((err) => {
    console.log(err);
  });

async function main() {
  await mongoose.connect(mongoUrl);
}

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

app.use(express.urlencoded({ extended: true }));
app.use(methodOverride('_method'));
app.use(express.static(path.join(__dirname, '/public')));
app.engine('ejs', ejsMate);

const seassionOptions = {
  secret: 'secret_key',
  resave: false,
  saveUninitialized: true,
  cookie: {
    expires: Date.now() + 7 * 24 * 60 * 60 * 1000,
    maxAge: 7 * 24 * 60 * 60 * 1000,
    httpOnly: true,
  },
};

app.use(session(seassionOptions));
app.use(flash());

app.use(passport.initialize());
app.use(passport.session());
passport.use(new LocalStrategy(User.authenticate()));

passport.serializeUser(User.serializeUser());
passport.deserializeUser(User.deserializeUser());

app.use((req, res, next) => {
  res.locals.success = req.flash('success');
  res.locals.error = req.flash('error');
  res.locals.currUser = req.user;
  next();
});

app.use('/listings', listingsRouter);
app.use('/listings/:id/reviews', reviewsRouter);
app.use('/', userRouter);

app.all('*', (req, res, next) => {
  next(new expressError(404, 'Page not found'));
});

app.use((err, req, res, next) => {
  let { statusCode = 500, message = 'Something went wrong' } = err;
  res.status(statusCode).render('error.ejs', { message });
});

app.listen(8080, () => {
  console.log('App is listening to port : 8080');
});



nav bar ===============

<nav class="navbar custom-navbar border-bottom sticky-top">
  <div class="container-fluid">
    <!-- Logo Section -->
    <a class="navbar-brand" href="/listings">
      <i class="fa-regular fa-compass logo-icon"></i>
      <span class="brand-name">AirExplorer</span>
    </a>

    <!-- Toggler for Mobile View -->
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarContent"
      aria-controls="navbarContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <i class="fa-solid fa-bars"></i>
    </button>

    <!-- Navbar Links and Search Bar -->
    <div class="collapse navbar-collapse" id="navbarContent">
      <div class="navbar-nav left-links">
        <a class="nav-link" href="/listings" style="margin-right: 1rem"
          >Explore</a
        >
        <a class="nav-link" href="/listings/new">Add New</a>
      </div>

      <div class="down-container">
        <div class="navbar-nav center-search mb-2">
          <form
            class="d-flex needs-validation"
            role="search"
            action="/listings"
            method="GET"
            novalidate
          >
            <input
              class="form-control search-input"
              type="search"
              name="query"
              placeholder="Search Countries"
              required
            />
            <button class="btn btn-search" type="submit">
              <i class="fa-solid fa-search"></i>
            </button>
          </form>
        </div>

        <div class="navbar-nav right-links">
          <% if (!currUser) { %>
          <a class="nav-link btn-outline" href="/signup">Sign Up</a>
          <a class="nav-link btn-outline" href="/login">Log in</a>
          <% } else { %>
          <a class="nav-link btn-outline" href="/logout">Log out</a>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</nav>



routes -> listing.js 

const express = require('express');
const router = express.Router();
const wrapAsync = require('../utils/wrapAsync.js');
const { isLoggedIn, isOwner, validateListing } = require('../middleware.js');
const listingController = require('../controllers/listings.js');
const multer = require('multer');
const { storage } = require('../cloudConfig.js');
const upload = multer({ storage });
const Listing = require('../models/listing'); 

router
  .route('/')
  .get(wrapAsync(listingController.index))
  .post(
    isLoggedIn,
    upload.single('listing[image]'),
    validateListing,
    wrapAsync(listingController.createListing),
  );

// new route
router.get('/new', isLoggedIn, listingController.renderNewForm);

router
  .route('/:id')
  .get(wrapAsync(listingController.showListing))
  .put(
    isLoggedIn,
    isOwner,
    upload.single('listing[image]'),
    validateListing,
    wrapAsync(listingController.updateListing),
  )
  .delete(isLoggedIn, isOwner, wrapAsync(listingController.destroyListing));

// Edit route
router.get(
  '/:id/edit',
  isLoggedIn,
  isOwner,
  wrapAsync(listingController.editForm),
);

router.get('/', async (req, res) => {
  const { query } = req.query; 
  console.log('Search query:', query);

  if (query) {
    res.send(`You searched for: ${query}`);
  } else {
    res.send('No search query provided.');
  }
});

//Filters
router.get('/filter/:filter', wrapAsync(listingController.filter));

module.exports = router;




problem in this part ======router.get('/', async (req, res) => {
  const { query } = req.query; 
  console.log('Search query:', query);

  if (query) {
    res.send(`You searched for: ${query}`);
  } else {
    res.send('No search query provided.');
  }
});


not connecting with the url like ======= http://localhost:8080/listings?query=United+States